package com.data.structures.test;

import java.security.Security;

import org.bouncycastle.jce.provider.BouncyCastleProvider;

import com.quickplay.drm.external.IPlatformServices;
import com.quickplay.drm.external.IRightsObjectEncryptor;
import com.quickplay.drm.external.QpDrmClient;
import com.quickplay.mmp.shared.util.Cipher;



public class ROTest {

	static {
		Security.addProvider(new BouncyCastleProvider());
	}
	
	static String rightsObject = "/8peoQPoQTo9AcdoU7V5C/rzLcG4tY5A8KFLT7H+RU7qpzxkUFgE69pxpvaIjapB8garHtYT5GcekY/+YzngOzkvp/N2Qplj+zoWDzZxnRYbxVY/IFIod/v75AcOtsvhTcXmAS54pkwzXjizVUeGn9dLliCZBwYgQNhzP2xH9LOEIZiMl/Ul5aZugRcOO+hg5UJSkSpfjQdAWPt5oEDQ0kpbc6zysZbHaaVfijmDMKE5nLUNTRq9Co7vYoLY909NctBW61XZzbuoSc9NGXT5IzjhWfKvgS4Le+lR9EfGcojnaAKHZ24BsGO8XS2AmZJp0bKsa30ToN2ft1kslsULTXfwLcYWHcjK6ComIxhG78TJtDVhgzdfSKPr/RZ2NKdb2u4KhH9i/eh/0Hp1JtS5dVPYgiAJdOPAmr0PZAX2MQl3UCWAvazwODcFOzi298oETezi58D2NtetBJWaAX2hQxwtNdgWhbhxdJiBymdfRseQap4mTH8qXgtht5twW8XFXZ5gCW5I/wJVqQK5v0jN/64no59tnWNn4oeCHsdVhUPFpEUN6rna+/LmXZ0HpRqaYN3Ag8TLMkdnggc95BICDmaK5g6btiC/rA6sobJfwYWqZV9NFPSvArobKCeGjHPlrvYkLmGWH9DY7o7AjzYsH/N/ASQjEQbxyzuc0mYi/KwcYKrqaBeMdLY9yzGBANEqNd9zadClXLlAndFpb27jiTPxkjJDTPpwuQ5JCS5Y4E+KWQYX/mPfUFuFDqIKAF5jpMhqLn/xDaWVO9pSVUPw2S+rrbHHyrjeaEEWJLqrlYCBE15EoG4VrJDqkmqp39dSuuw55G6esuffUy+zIQJ1rOEDN/9SwOub7NOsGbXqTHdnLko4bu0Z3Wu8r7VibgNe7+OszG6H6ft/mQRl3KkqOqVz57LulncS62nVztounA4P3bCIjxH9CMzO4CepIWfUQXNz8TTUr8U3DOS13NHzQqwu+LbmutTX4T+8CauYwsgVv6/qs09290Hlwb8tyvYC9CPqm31DfO6FxRW7Oihv5JtqqW1aiyAPbOThaZVkyGxZ4M45x7INEVvXOW5FGiOijspMhV5Aktb2+PDxXzx0ROAPCxKOUHn7wLutlwXrZv29ajvxkZCZWDTAOTHbyggRSKa2QuSdXoEFSc9z/QH3GgcQpPoFtlPx6s2IkP7ESXGXrKoLQJ9mVEtEE2rG4xFfQmcGK4+yklO0AQz0nQfBEY4kzjuyvI5NjJldBvS+gTpt/4xdL6FM6ypOSTNyHlfXsUEpvIExc2o+f2Q5vcXdY7PrLezCz+v/SvC8rWZ9aFAbFOE12C4Tt6N2dusvZzwD+Zn9gbeYdQgebVlB52PXkhMH7ibO66eGIKcxtkwe0kg904XcDySWzoYO2q3KVOGlsfeMQgrx/RFd050wf7bT2Gk9dc588mewmsyZjXO3CnhO4KRQibHy00fBlpWeeIEqoXZ01tTxLmZZRCzUAMDtHZ9BR7x7AavGIT74Ic4iPm3/s2fkqublWW4ol2u6+APKn1yY4oD77sjuu6ay1/Rzr7OW1nwaBO8s00N6AgVfXyPmBJbjlpTPZMrDeffTaxTHkdbqeMajxiu99wT3FFOpYwnS68IE0x0WVxsX9bKABQCgTW0kJTyfazDll0Wn166Dpms77tDtsrUgM6ICwWCx8+6ejTz/I8JiH/mfanbk3PdJ5TtdyVHge1n5N3snch8yP3Zsz6G84kXxMCyngusleMLYBoCrDInG4z+9bBwVNtPMHkYpW/rVIXzyRVt8oQRkBywHPKEKA5b8265mIDxEQEnBcgGrCXJ5sduSEfmw9IUqF9uavngAYhsHieF7dpRcHPSnp9ZzWxvKMS6n8d17EZPbvLp4Yy4MYPxsUsKrl2CqT/cLEgr6uWtNWeLaQXWTg9mNA1RjsTwhybLI/Qt1O1dfTXApQ+kRgG5xxqCqTiRjk5xZqNIr3c9KPTL4tY4Cs+2Ya4Z/NJV6Yyib5JaUrISnMfVVAE5S9vSQfoBR7SFQqDJGnOBB4KU9+Nkiuh+WR8kJjGtjW2I1figX79wlUUcgpBIiBc6Qgc9W3tkAvzi5QZJ0i/HGkJSHTwbnCOIUZR/EqnpZZ4Y8jQN4Ubzvpcc1spitXP7uKFlVNGVDLmf/LmxCNRsnyvzkxjo30i852pWT+QJXeAfiLENBzFk7ilfQrfFXxB+ohkMB9CchlDetbIR0KaSRoR3iaieCnKlqIE197Oad/58Cfaze2BCZqNKK975bzkr/0etBkDZ5HMkCmA2N50JLv81CniElEp2OqYnNhYDhmJ4WFpcKBPVpRvrZSCkLB9DuXn61B1QlFEZgkAZb4YLBQpd3LwmIh3K/3DZGibjKfqwUDmNKxaI8ZK2ZXaOd861OPFD9IpZvADVysED0JaD9UwoeQ1LRnPB8V2pG/l2mYp9xR0kZumKAapDdNzpdiucSY4Kd6iiCZfiLcy6BflljFWQsPHaHgmRwU6XBVvIIJfWVCGx6CGpkvLzx9wIfj1m1CFmth7PxevyB/qVllYJkRMR+XgMBX9g4l63EWAheJ8HtwOk1TuYatAUEoKbaRsp6mdd43ruZ5vn0WGs/D5hoS8WLnlHmJOrIN/6Q4LXKlbxds/8ypKvgqgB2oD6/BmVdPgS7jS9RK32zcF8ggtNVBrMLbF/TSM9Fe7UbX8yQxtj06B9SKIkVybZ1REE5GL2113yyhSR3eYKBAbkhknJgL00M8nbP1DKOm3q+ELNwQp0+q6EZRWYxlndxZAbfk7J+JpvbX2XuqQPxvgYJx7tPlKbQ7J/pTJA/K1NpvoFgzegY47hgXFLaYl63geIKQCyCjtSDBJMgYlcbS+O1PwbRflIh+gzuIXtGIJR/rGI27Nbq+4NTE0ZL70xWK9gAv4hmwWcTzVT4MnnHW0x0H5JBIqIAkh0dgelbgUKBBadjmUvr7FZ3ngJPSbBeUCOVYhlY0x0eIiDBn1huGN9s1GLv9TTh6loZUM06OZ9NbOexzgcNutfP2KRgxlO6vgNGMFG3PiiXk+Ed/mMzvySwZw4+W5BQ0vx5S6lIXCtC0mC2QFxnQnFbQa+CuV43ZEe0QMkWgXvxH+Fxib59jaGRLubpkCoohMsak2SEVTlo/4Q7/n7iajLLdeEGX/GOBggvnFWGooLcbkxP6PPLYPvVesj2xt4rsWbwI7iVzlD4qGSsHgpNI6qVvIAiXKtw0OOhRts2Rq3aqed3rtkEDAiy1LhbJnMGcgBDFiamt1AdXQcU4wCh+Ehr4WRvrF8InRRB6NVyk1+wD8IqsEIQgEvD9kkGqSf5sysAokVVPWxfGWxJEaf4AvJx1haUc8eCVWpn97YECz2DN5wUSOkmZvzhqu3kVK8o6GVOqHOoOaIQUSOaT87oEtiU7ZR+4dR+TJlFUOcqdC9HTEpPXwA2SSS5YroaNAb8q1JZPle9kqBlDi2uIUvWwSQmCpijQpmihqxg/MvD1YA7SAYql8AlysuvEapz7+Un8lognYtTngNGIXMQQ6ZvhrTm8NF4NywwHlf/8OGg11s9sD4iTWIXTbQ2ItHJZw9sz+M9QXUfnOtTYanjbn7oHS+iTGlA/u0/ww2soWiw43jnuMwdrtDnF/vRJHPVrIPfCQ2Ve4cUMOiYEgn8BrJVhvo+M96F5Ts9VKLAVcHfB9Tj/D91hrn5xL1lk2SkTTTCVVhTHsLvXt12VFgFXzV0JDos6zIfAq7LfliAqJvWX7cGfkVDAH6hDFlgnTBj93wsKHAldIrSPt1FTRHRksRDSm18PsjdZvywNzAoPswv4jJskyDQGCVPA/RdQVRwSPHcTDZTmjSCsMqp20MzIR0Lq5YqbuPeAZPJhSYG3jc0wmAX3jsFn+PjNtO322WsmDLAXD8wAHInSYtXuRtGbEXOFSTYI3oT/URFXQv5389lury5umH4klnv0ZDkQzkYSrpfGlV1tKYzZC09oeED7ebQSS2Clz4Bx3myJDXS/g0MybB0xECHwH2Kf9Y7JN0zG9l/AVyt1lbg4Nzfh3Nb7KNoVDMuDggBkNrCzb8rRJ3YvFAsKPIDGcoFRfp//D4cAAYsfnQmEXglNr8p7rOMdEawehPgN6whsn2mka45peAeE13fjApPfj39ewg4ttFZEYDy8gghDGReB9KQGALsr36z/gg2ASM5c7P062qJDMl8mijIo5rrgNohzd9U/OpM7kGMsn+dqM8QIqs8H7BD05ODR7dlMzzEcubjzIYQDsgber9G0JU83vlHufeP7t+MQzyIvizIoo0PalRNu+GVkCYmniprOimp8Y+CCCcacE7LslIuKgQGCiYrhdCFdEGuiNw4j/8WknYFZBybUZ2NpGneyji9c82bkH1NE6Zb24ykgCSa8tm08oWY70yeJ1Ov7NmxrF85BQtVS9tRitIlvwAuzGQ7LaWABAwJOX0kE6EdwMxWJqlsR+fjRtEJBI+VAiwLMK1XfOLJstNwbZpdHZpv2qiHDf7lepXEiAr4OXmy5avgH3y6PCAp+QfqvC/9LHxbjoi12E7ANEDt2yoUSA8Vhc7oi+/0XIhhP/2AzfA6ZZN02Tm3yy5BpKzNU42f3GL0KuoJ3V5GHqcdMGiiwxoUGSSgYC8fZI42AjPD0I5vmJQrYB/sqqXg1RYGP7syaNuOSgfdEWGrF36FCUBA5O+xPAQH7/VSH1AJnoIgTBhdz2fYkMIjniv7grmeUXJO3nM3gkoubzDDaqNKEvWSHn4ereIwbhnZ2z5dAw7U96XDNuysCOJNmHZqe1P+clzIPwl3TvWdqDiWD5trllcNpn5qWzLqL26dFrsDimThIMJMNvZ6kSQ+9TClVbBRHdnZ9NWN6+9u4CRmzYtWZfb4c4AXP61ypcj44nrJ1ky3/dbz7X7MGGPxWdHcdq9j1phmDJ+1jWTnhJ4vw4eiPwmnEiKMvRzZlYuJBQiKHKq7k+2WO9W8b3pGZglOWiRqYsT6gLuzTYELvuA8i1jEBXfRV/hiKGAILjAH4uVjtcWHGN2BNmNSBNUBGTk9Exm3N9OPorECPaz75sb3gbiZXqhPMQT9QwoNxobaV4JoJPeIuMHqtkZkGhOyJhEU/JriGnmVDdF96z+PR+dejRavB+/abVOCylH8hF6s6qihuUl2aQdb4PkK3YFEjBeAJTqzGnb5sdWM5262tk4Iom1kEpUzjn59Ei8hL7G2wRS7Ru1DUo1WfJ0S1jHyfNHy9ri1bx01VkRzTPR1NT15q7Mv1JurVFkRBOXVCpnQ6xiWQyoWIuKZ6MlU3YPG7SA6p/aNEY2R4L+clbrDY+0E4KVsJM5eufHydIDkpXTkyGR2FqiFCE5ZP+D+/DSCFaoHZOqL5eRGd/z6gssA/YyM/xOc9RLhHadn1rNVJCacpcKZfLgGHGXDO+0RSPN0IZT4myCnuf9SKvjkdHVyJLYheDyYBOpiQca24effysuhLg==";
	static String deviceId = "353295061703566";
	public static void main(String[] args) throws Exception {
		String confSecret = "dVUuy7lt755>&";
		String sharedSecret = Cipher.decode(confSecret);
		IRightsObjectEncryptor drmClient = QpDrmClient.createRightsObjectEncryptor(new IPlatformServices() {
					public String getSharedSecret()
					{
						return sharedSecret;
					}

					public byte[] getUniqueDeviceID() throws Exception
					{
						return deviceId.getBytes();
					}

					public String[] getParameters()
					{
						return null;
					}
				});
		String decRO = drmClient.decryptRightsObject(rightsObject);
		System.out.println("decodeRO : " + decRO);
	}

}
